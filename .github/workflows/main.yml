name: ðŸš€ Deploy to Production 

on:
  workflow_dispatch:
  # push:
   # branches:
   #  - main

jobs:
  deploy:
    name: ðŸš€ Deployment to Production
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v4

      - name: ðŸ•’ Generate timestamp to update version project
        run: echo "timestamp=$(date +%s)" >> $GITHUB_ENV

      - name: ðŸ”¨ Creating .env file (WEB)
        run: |
          echo -n "${{ secrets.PRODUCTION_DEPLOY_ENV_WEB }}" | tr -d '\r' > ./apps/web/.env
          echo -e "\nAPP_VERSION=${{ env.timestamp }}" >> ./apps/web/.env

      - name: ðŸ”¨ Creating .env file (SERVER)
        run: |
          echo -n "${{ secrets.PRODUCTION_DEPLOY_ENV_SERVER }}" | tr -d '\r' > ./apps/server/.env
          echo -e "\nAPP_VERSION=${{ env.timestamp }}" >> ./apps/server/.env

      - name: ðŸ‘· Building
        run: |
          npm install -g pnpm@10.0.0 &&
          pnpm install &&
          pnpm schema &&
          pnpm relay &&
          pnpm build

      - name: ðŸš€ Deploy to Production server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.PRODUCTION_SSH_PRIVATE_KEY }}
          ARGS: '-rlgoDzvc -i'
          SOURCE: '.'
          REMOTE_HOST: ${{ secrets.PRODUCTION_HOST }}
          REMOTE_USER: ${{ secrets.PRODUCTION_SUDO_USERNAME }}
          EXCLUDE: '/.docker/, /k6/, docker-compose.yml'
          TARGET: ${{ secrets.PRODUCTION_PROJECT_DIR }}
          SCRIPT_AFTER: |
            echo "Starting containers via PNPM..."
            pnpm --prefix ${{ secrets.PRODUCTION_PROJECT_DIR }} compose:up:production
