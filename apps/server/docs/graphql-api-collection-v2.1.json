{
	"info": {
		"_postman_id": "e7440aa4-4610-4a4c-b44b-e3ed7efb9a0d",
		"name": "Postman Collection (from GraphQL)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "48891101",
		"_collection_link": "https://hallancosta-2571599.postman.co/workspace/H%C3%A1llan-da-Silva-Costa's-Workspa~a6f64e06-e34d-46bb-802a-d7d579ce46e4/collection/48891101-e7440aa4-4610-4a4c-b44b-e3ed7efb9a0d?action=share&source=collection_link&creator=48891101"
	},
	"item": [
		{
			"name": "Local",
			"item": [
				{
					"name": "mutations",
					"item": [
						{
							"name": "CreatePixTransaction",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  CreatePixTransaction(input: {\n    value: 1000\n    status: \"CREATED\"\n    description: \"Transferência almoço\"\n    debitParty: {\n      psp: \"Bank Challanger LTDA\"\n      account: \"QWNjb3VudDo2OGJlMTliMmEyNzhlN2IyY2Y2N2RhZDU=\"\n      type: \"PHYSICAL\"\n      pixKey: \"95b7f30c-2fad-43cd-85d1-f5615cf28a39\",\n      name: \"Hállan Conta 1\"\n    }\n    creditParty: {\n      psp: \"Bank Challanger LTDA\"\n      account: \"QWNjb3VudDo2OGJlMTliMmEyNzhlN2IyY2Y2N2RhZDc=\"\n      type: \"COMPANY\"\n      pixKey: \"08771dd3-32c0-4fe7-8725-6175ab14c7ee\"\n      name: \"Hállan Conta 2\"\n    }\n    idempotencyKey: \"pix:0\"\n  }) {\n    error\n    pixTransaction {\n      value\n      status\n      description\n      debitParty {\n        psp\n        account\n        type\n        pixKey\n      }\n      creditParty {\n        psp\n        account\n        type\n        pixKey\n      }\n    }\n  }\n}",
										"variables": "{\n  \"input\": {\n    \"value\": \"\",\n    \"status\": \"\",\n    \"debitParty\": {\n      \"psp\": \"\",\n      \"account\": \"\",\n      \"type\": \"\",\n      \"pixKey\": \"\"\n    },\n    \"creditParty\": {\n      \"psp\": \"\",\n      \"account\": \"\",\n      \"type\": \"\",\n      \"pixKey\": \"\"\n    },\n    \"description\": \"\",\n    \"idempotencyKey\": \"\",\n    \"clientMutationId\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "queries",
					"item": [
						{
							"name": "accounts",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n    accounts (\n        filters: { pixKey: \"95b7f30c-2fad-43cd-85d1-f5615cf28a39\" }\n    ) {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                id\n                pixKey\n                balance\n                type\n                psp\n                createdAt\n            }\n            cursor\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"filters\": {\n    \"user\": \"\",\n    \"pixKey\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "users",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n    users {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                id\n                _id\n                email\n                password\n                name\n                createdAt\n            }\n            cursor\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"filters\": {\n    \"email\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ledgerEntries",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  ledgerEntries(\n    first: 2\n    filters: { account: \"QWNjb3VudDo2OGJlMTliMmEyNzhlN2IyY2Y2N2RhZDU=\" }\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        id\n        value\n        ledgerAccount {\n          psp\n          account\n          type\n          pixKey\n          name\n        }\n        type\n        description\n        pixTransaction\n        idempotencyKey\n      }\n    }\n  }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"filters\": {\n    \"account\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "pixTransactions",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n   pixTransactions(\n    first: 2\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        id\n        value\n        debitParty {\n            name\n            account\n            pixKey\n            psp\n            type\n        }\n        creditParty {\n            name\n            account\n            pixKey\n            psp\n            type\n        }\n      }\n    }\n  }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"filters\": {\n    \"user\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Production",
			"item": [
				{
					"name": "mutations",
					"item": [
						{
							"name": "CreatePixTransaction",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  CreatePixTransaction(input: {\n    value: 100\n    status: \"CREATED\"\n    description: \"Transferência almoço\"\n    debitParty: {\n      psp: \"Bank Challanger LTDA\"\n      account: \"QWNjb3VudDo2OGRiMTY4MTIwNWNkNmMyNTMxZWJjNWU=\"\n      type: \"PHYSICAL\"\n      pixKey: \"95b7f30c-2fad-43cd-85d1-f5615cf28a39\",\n      name: \"Hállan Conta 1\"\n    }\n    creditParty: {\n      psp: \"Bank Challanger LTDA\"\n      account: \"QWNjb3VudDo2OGRiMTY4MTIwNWNkNmMyNTMxZWJjNjA=\"\n      type: \"COMPANY\"\n      pixKey: \"08771dd3-32c0-4fe7-8725-6175ab14c7ee\",\n      name: \"Hállan Conta 2\"\n    }\n    idempotencyKey: \"pix:0\"\n  }) {\n    error\n    pixTransaction {\n      value\n      status\n      description\n      debitParty {\n        psp\n        account\n        type\n        pixKey\n        name\n      }\n      creditParty {\n        psp\n        account\n        type\n        pixKey\n        name\n      }\n    }\n  }\n}",
										"variables": "{\n  \"input\": {\n    \"value\": \"\",\n    \"status\": \"\",\n    \"debitParty\": {\n      \"psp\": \"\",\n      \"account\": \"\",\n      \"type\": \"\",\n      \"pixKey\": \"\"\n    },\n    \"creditParty\": {\n      \"psp\": \"\",\n      \"account\": \"\",\n      \"type\": \"\",\n      \"pixKey\": \"\"\n    },\n    \"description\": \"\",\n    \"idempotencyKey\": \"\",\n    \"clientMutationId\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url_production}}",
									"host": [
										"{{url_production}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "queries",
					"item": [
						{
							"name": "accounts",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n    accounts (\n        filters: { pixKey: \"95b7f30c-2fad-43cd-85d1-f5615cf28a39\" }\n    ) {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                id\n                pixKey\n                balance\n                type\n                psp\n                createdAt\n            }\n            cursor\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"filters\": {\n    \"user\": \"\",\n    \"pixKey\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url_production}}",
									"host": [
										"{{url_production}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "users",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n    users {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                id\n                _id\n                email\n                password\n                name\n                createdAt\n            }\n            cursor\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"filters\": {\n    \"email\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url_production}}",
									"host": [
										"{{url_production}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "ledgerEntries",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  ledgerEntries(\n    filters: { account: \"QWNjb3VudDo2OGRiMTY4MTIwNWNkNmMyNTMxZWJjNWU=\" }\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        id\n        value\n        ledgerAccount {\n          psp\n          account\n          type\n          pixKey\n          name\n        }\n        type\n        description\n        pixTransaction\n      }\n    }\n  }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"filters\": {\n    \"account\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url_production}}",
									"host": [
										"{{url_production}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "pixTransactions",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n   pixTransactions(\n    first: 2\n  ) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    edges {\n      node {\n        id\n        value\n        debitParty {\n            name\n            account\n            pixKey\n            psp\n            type\n        }\n        creditParty {\n            name\n            account\n            pixKey\n            psp\n            type\n        }\n      }\n    }\n  }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"filters\": {\n    \"user\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url_production}}",
									"host": [
										"{{url_production}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "",
			"description": "URL for the request."
		},
		{
			"key": "url_production",
			"value": ""
		}
	]
}